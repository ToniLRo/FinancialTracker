spring.application.name=FinancialTracker
# Configuración de base de datos se define en cada perfil específico
# No definir aquí para evitar conflictos con perfiles
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jpa.open-in-view=false

# JWT Configuration
jwt.secret=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
jwt.expiration=86400000

# Horarios de funcionamiento (Lunes a Viernes, 10:00-19:00)
app.schedule.start-hour=10
app.schedule.end-hour=19

# ===========================================
# OPTIMIZACIONES DE MEMORIA Y RECURSOS
# ===========================================

# Configuración de pool de conexiones optimizada
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

# Configuración de JPA optimizada
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# Configuración de servidor optimizada
server.tomcat.threads.max=20
server.tomcat.threads.min-spare=5
server.tomcat.max-connections=100
server.tomcat.accept-count=50
server.tomcat.connection-timeout=20000

# Configuración de logging optimizada
logging.level.root=WARN
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=WARN
logging.level.org.springframework.security=WARN
logging.level.com.tonilr.FinancialTracker=INFO

# Configuración de cache optimizada
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=100,expireAfterWrite=300s

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=grodt.devmail@gmail.com
spring.mail.password=licaobawwgnblsby

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.smtp.from=grodt.devmail@gmail.com
spring.mail.properties.mail.smtp.localhost=localhost
spring.mail.properties.mail.smtp.quitwait=false

# Ya existe: spring.jpa.hibernate.ddl-auto=update

# AÑADIR estas líneas para mejor debugging:
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.show_sql=true

# Para ver qué cambios hace Hibernate:
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Configurar Jackson para manejar lazy loading
spring.jackson.serialization.fail-on-empty-beans=false
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true